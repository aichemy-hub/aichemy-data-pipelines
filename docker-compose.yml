x-airflow-env: &airflow-env
  AIRFLOW__CORE__EXECUTOR: LocalExecutor
  AIRFLOW__CORE__LOAD_EXAMPLES: "false"
  AIRFLOW__CORE__FERNET_KEY: ${FERNET_KEY}
  AIRFLOW__WEBSERVER__SECRET_KEY: ${AIRFLOW_SECRET_KEY}
  AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow

services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes: [ "pgdata:/var/lib/postgresql/data" ]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow -d airflow"]
      interval: 10s
      timeout: 5s
      retries: 5

  airflow-webserver:
    image: apache/airflow:2.9.3
    depends_on: [ postgres, airflow-scheduler, airflow-init ]
    environment:
      <<: *airflow-env
      DOCKER_HOST: unix:///var/run/docker.sock
    group_add:
      - "${DOCKER_GID}"
    ports: [ "8080:8080" ]
    volumes:
      - ./dags:/opt/airflow/dags
      - /var/run/docker.sock:/var/run/docker.sock     # for DockerOperator
      - /mnt/aichemyrds/live/roar_ms_data:/data       # host data visible to Airflow
    command: webserver

  airflow-scheduler:
    image: apache/airflow:2.9.3
    depends_on: [ postgres, airflow-init ]
    environment:
      <<: *airflow-env
      DOCKER_HOST: unix:///var/run/docker.sock
    group_add:
      - "${DOCKER_GID}"
    volumes:
      - ./dags:/opt/airflow/dags
      - /var/run/docker.sock:/var/run/docker.sock
      - /mnt/aichemyrds/live/roar_ms_data:/data
    command: scheduler

  airflow-init:
    image: apache/airflow:2.9.3
    depends_on: [ postgres ]
    environment: *airflow-env
    entrypoint: ["/bin/bash","-lc"]
    command: >
      "airflow db upgrade &&
       airflow users create --role Admin --username admin --password admin --firstname A --lastname D --email admin@example.com || true &&
       airflow pools set msconvert 4 'ProteoWizard conversions (parallel cap)' || true"

volumes:
  pgdata: